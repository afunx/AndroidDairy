LayoutAnimationController是ViewGroup使用的动画控制器。其本质是让ViewGroup的子View播放动画。

/**
 * A layout animation controller is used to animated a layout's, or a view
 * group's, children. Each child uses the same animation but for every one of
 * them, the animation starts at a different time. A layout animation controller
 * is used by {@link android.view.ViewGroup} to compute the delay by which each
 * child's animation start must be offset. The delay is computed by using
 * characteristics of each child, like its index in the view group.
 *
 * This standard implementation computes the delay by multiplying a fixed
 * amount of miliseconds by the index of the child in its parent view group.
 * Subclasses are supposed to override
 * {@link #getDelayForView(android.view.View)} to implement a different way
 * of computing the delay. For instance, a
 * {@link android.view.animation.GridLayoutAnimationController} will compute the
 * delay based on the column and row indices of the child in its parent view
 * group.
 *
 * Information used to compute the animation delay of each child are stored
 * in an instance of
 * {@link android.view.animation.LayoutAnimationController.AnimationParameters},
 * itself stored in the {@link android.view.ViewGroup.LayoutParams} of the view.
 *
 * @attr ref android.R.styleable#LayoutAnimation_delay
 * @attr ref android.R.styleable#LayoutAnimation_animationOrder
 * @attr ref android.R.styleable#LayoutAnimation_interpolator
 * @attr ref android.R.styleable#LayoutAnimation_animation
 */
public class LayoutAnimationController {
	/**
	 * Distributes the animation delays in the order in which view are added
	 * to their view group.
	 */
	public static final int ORDER_NORMAL = 0;

	/**
	 * Distributes the animation delays in the reverse order in which view were
	 * added to their view group.
	 */
	public static final int ORDER_REVERSE = 1;

	/**
	 * The animation applied on each child of the view group on which this
	 * layout animation controller is set.
	 */
	public static final int ORDER_RANDOM = 2;
}

使用方法:
	LayoutAnimationController controller = new LayoutAnimationController(AnimationUtils.loadAnimation(context, R.anim.xxx));
	controller.setOrder(LayoutAnimationController.ORDER_REVERSE);
	xxxLayout.setLayoutAnimation(controller);
	xxxLayout.startLayoutAnimation();

说明:
	LayoutAnimationController是ViewGroup对于其子View实施的动画。所有的子View都使用相同的动画，但每个子View有自己的动画。
	LayoutAnimationController的子View动画执行顺序分为3种：
	1. ORDER_NORMAL 先添加的View先执行动画
	2. ORDER_REVERSE 后添加的View先执行动画
	3. ORDER_RANDOM View随机顺序执行动画
